#!/usr/bin/env bash
# This template along with variable assignments generated by makeBBoxSpreadsheet.sh
# are used to create a script that will interactively repair shows listed in $REPAIR_SHOWS

# Script copied from repairBBoxTemplate.sh

# trap ctrl-c and call cleanup
trap cleanup INT
#
function cleanup() {
    rm -f $TEMP_FILE
    echo ""
    exit 130
}

cat <<EOF
Attempting to repair shows with possible missing episodes.
You will be given a chance to repair each show individually
based on comparing the show counts on original and repaired .csv files.

Original files:
$EPISODES_FILE
$SEASONS_FILE

Revised files:
$REVISED_EPISODES_FILE
$REVISED_SEASONS_FILE

Backup files:
$EPISODES_BACKUP_FILE
$SEASONS_BACKUP_FILE

EOF

if [ ! -e $REVISED_EPISODES_FILE ]; then
    echo "[Error] Can't find $REVISED_EPISODES_FILE"
    echo "Create one by scraping with $REPAIR_EPISODES_FILE"
    exit 1
fi
if [ ! -e $REVISED_SEASONS_FILE ]; then
    echo "[Error] can't find $REVISED_SEASONS_FILE"
    echo "Create one by scraping with $REPAIR_SEASONS_FILE"
    exit 1
fi

# Save a backup
cp $EPISODES_FILE $EPISODES_BACKUP_FILE
cp $SEASONS_FILE $SEASONS_BACKUP_FILE

# Loop through shows in $REPAIR_SHOWS
# Use FD 3 so you can prompt on STDIN
while read -r -u 3 line; do
    echo "### Differences in counts of $line episodes"
    printf "Original: %3d\n" "$(grep -c $line $EPISODES_FILE)"
    printf "Revised:  %3d\n" "$(grep -c $line $REVISED_EPISODES_FILE)"
    perl -pe 'tr/\r//d' $EPISODES_FILE | awk -f fixExtraLinesFrom-webscraper.awk |
        grep -v $line >$TEMP_FILE
    read -r -p "Attempt repair of $line episodes? [y/N] " YESNO
    if [ "$YESNO" != "y" ]; then
        echo "Skipping..."
    else
        echo "Repairing ..."
        cp $TEMP_FILE $EPISODES_FILE
        perl -pe 'tr/\r//d' $REVISED_EPISODES_FILE | awk -f fixExtraLinesFrom-webscraper.awk |
            grep $line >>$EPISODES_FILE
    fi
    rm -f $TEMP_FILE
    #
    echo ""
    echo "### Differences in counts of $line seasons"
    printf "Original: %3d\n" "$(grep -c $line $SEASONS_FILE)"
    printf "Revised:  %3d\n" "$(grep -c $line $REVISED_SEASONS_FILE)"
    perl -pe 'tr/\r//d' $SEASONS_FILE | awk -f fixExtraLinesFrom-webscraper.awk |
        grep -v $line >$TEMP_FILE
    read -r -p "Attempt repair of $line seasons? [y/N] " YESNO
    if [ "$YESNO" != "y" ]; then
        echo "Skipping..."
    else
        echo "Repairing ..."
        cp $TEMP_FILE $SEASONS_FILE
        perl -pe 'tr/\r//d' $REVISED_SEASONS_FILE | awk -f fixExtraLinesFrom-webscraper.awk |
            grep $line >>$SEASONS_FILE
    fi
    rm -f $TEMP_FILE
    echo ""

done 3<"$REPAIR_SHOWS"
